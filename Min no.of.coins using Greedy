2. minimum  number of coins using greedy method 
 Given an infinite supply of each denomination of Indian currency { 1, 2, 5, 10, 20, 50, 100, 200, 500, 2000 } and a target value N.
Find the minimum number of coins and/or notes needed to make the change for Rs N. You must return the list containing the value of coins required. 


Example 1:

Input: N = 43
Output: 20 20 2 1

Sol:-
// User function Template for Java

class Solution{
    static List<Integer> minPartition(int N)
    {
        // code here
        // create an array of all denominations 
        int[] arr = new int[]{1,2,5,10,20,50,100,200,500,2000};
        //create an array list to store then elements generated
        List<Integer> ans= new ArrayList<>();
        // start from the last denomination
        int i =9;
        // start the looping from the last denomination
        while(i>=0){
            // if the current  denomination is greater then 
            if(arr[i]>N){
                // then reduce the  denominations
                i--;
            }else{
                // or else if the selected denomination is enough
                while(N>=arr[i]){
                    //add the denominations to the list 
                    ans.add(arr[i]);
                    // and reduce the remaining amount 
                    N-=arr[i];
                }
            }
        }
        // return the ans
        return ans;
        
